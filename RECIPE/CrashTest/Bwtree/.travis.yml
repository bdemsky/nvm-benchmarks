language: cpp
compiler:
    - /scratch/nvm/benchmarks/RECIPE/g++

before_install:
    - sudo apt-get -y install gdb
    - pip install --user cpp-coveralls

install:
    # get c++11 support
    - export CXX="/scratch/nvm/benchmarks/RECIPE/g++"
    - ulimit -c

addons:
    apt:
        sources:
            - ubuntu-toolchain-r-test
            - boost-latest
        packages:
            - /scratch/nvm/benchmarks/RECIPE/g++

before_script:
    - ulimit -c unlimited -S

script:
    - RESULT=0
    - make prepare PAPI_FLAG=-DNO_USE_PAPI
    - make benchmark-all CXX=/scratch/nvm/benchmarks/RECIPE/g++ PAPI_FLAG=-DNO_USE_PAPI PRELOAD_LIB=
    - make benchmark-bwtree CXX=/scratch/nvm/benchmarks/RECIPE/g++ PAPI_FLAG=-DNO_USE_PAPI PRELOAD_LIB=
    - make clean
    - make test CXX=/scratch/nvm/benchmarks/RECIPE/g++ OPT_FLAG="-fprofile-arcs -ftest-coverage -O2 --coverage" PAPI_FLAG=-DNO_USE_PAPI PRELOAD_LIB= || RESULT=$?
    - if [[ ${RESULT} == 0 ]]; then echo "\\o/ Test worked without problems"; else echo "Test returned an errorcode of $RESULT"; fi;
    - for i in $(find ./ -maxdepth 1 -name 'core*' -print); do gdb $(pwd)/test core* -ex "thread apply all bt" -ex "set pagination 0" -batch; done;
    - if [[ ${RESULT} != 0 ]]; then exit $RESULT ; fi;

after_success:
    - coveralls --gcov=gcov-5 -t=NZ5M6jFefl1w4w7aCVCLDuK4GfOWMFYiW
